(function(n){function e(e){for(var o,r,s=e[0],c=e[1],d=e[2],u=0,p=[];u<s.length;u++)r=s[u],Object.prototype.hasOwnProperty.call(i,r)&&i[r]&&p.push(i[r][0]),i[r]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(n[o]=c[o]);l&&l(e);while(p.length)p.shift()();return a.push.apply(a,d||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],o=!0,s=1;s<t.length;s++){var c=t[s];0!==i[c]&&(o=!1)}o&&(a.splice(e--,1),n=r(r.s=t[0]))}return n}var o={},i={app:0},a=[];function r(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.m=n,r.c=o,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)r.d(t,o,function(e){return n[e]}.bind(null,o));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],c=s.push.bind(s);s.push=e,s=s.slice();for(var d=0;d<s.length;d++)e(s[d]);var l=c;a.push([0,"chunk-vendors"]),t()})({0:function(n,e,t){n.exports=t("56d7")},1042:function(n,e){function t(n,e,t,o){this.from=n,this.to=e,this.length=t,this.coefficient=o}n.exports=t},"140e":function(n,e){n.exports=function(n){return 0===n?"x":1===n?"y":2===n?"z":"c"+(n+1)}},"56d7":function(n,e,t){"use strict";t.r(e);t("e260"),t("e6cf"),t("cca6"),t("a79d");var o=t("2b0e"),i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{attrs:{id:"app"}},[t("h2",[t("a",{attrs:{href:"https://github.com/anvaka/ngraph.forcelayout"}},[n._v("ngraph.forcelayout")]),n._v(" demo "),t("small",{staticClass:"toggle-settings"},[t("a",{attrs:{href:"#"},on:{click:function(e){e.preventDefault(),n.settingsOpen=!n.settingsOpen}}},[n._v(n._s(n.settingsOpen?"hide settings":"show settings"))])])]),n.settingsOpen?t("div",{staticClass:"content"},[t("div",{staticClass:"row"},[t("div",{staticClass:"label"},[n._v("Graph ")]),t("select",{directives:[{name:"model",rawName:"v-model",value:n.selectedGraph,expression:"selectedGraph"}],staticClass:"value",attrs:{disable:n.loading},on:{change:function(e){var t=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){var e="_value"in n?n._value:n.value;return e}));n.selectedGraph=e.target.multiple?t:t[0]}}},n._l(n.graphs,(function(e){return t("option",{key:e,domProps:{value:e}},[n._v(n._s(e))])})),0)]),t("input-value",{attrs:{label:"Time step"},model:{value:n.layoutSettings.timeStep,callback:function(e){n.$set(n.layoutSettings,"timeStep",e)},expression:"layoutSettings.timeStep"}},[n._v(" This is integration time step value. The higher it is, the faster nodes will move, but setting it too high can result in lots of jitter and instability. ")]),t("input-value",{attrs:{label:"Gravity"},model:{value:n.layoutSettings.gravity,callback:function(e){n.$set(n.layoutSettings,"gravity",e)},expression:"layoutSettings.gravity"}},[n._v(" This coefficient defines how strongly each node repels each other. ")]),t("input-value",{attrs:{label:"Ideal spring length"},model:{value:n.layoutSettings.springLength,callback:function(e){n.$set(n.layoutSettings,"springLength",e)},expression:"layoutSettings.springLength"}},[n._v(" What is the ideal length of each spring? ")]),t("input-value",{attrs:{label:"Spring coefficient"},model:{value:n.layoutSettings.springCoefficient,callback:function(e){n.$set(n.layoutSettings,"springCoefficient",e)},expression:"layoutSettings.springCoefficient"}},[n._v(" Higher values makes the spring force stronger, pushing edges closer to the ideal spring length. ")]),t("input-value",{attrs:{label:"Drag coefficient"},model:{value:n.layoutSettings.dragCoefficient,callback:function(e){n.$set(n.layoutSettings,"dragCoefficient",e)},expression:"layoutSettings.dragCoefficient"}},[n._v(' This coefficient introduces "resistance" from environment. When it is close to 0 the forces will have a lot of freedom, nothing will be stopping them, and that can result in a very unstable simulation. ')]),t("input-value",{attrs:{label:"Theta"},model:{value:n.layoutSettings.theta,callback:function(e){n.$set(n.layoutSettings,"theta",e)},expression:"layoutSettings.theta"}},[n._v(" This coefficient influences when we apply long distance forces approximation. When this value is close to 0, the simulation compares forces between every single node (giving O(n^2), slow performance). Recommended value is 0.8. ")]),t("input-value",{attrs:{label:"Dimensions",step:"1"},model:{value:n.layoutSettings.dimensions,callback:function(e){n.$set(n.layoutSettings,"dimensions",e)},expression:"layoutSettings.dimensions"}},[n._v(" Defines number of dimensions of the space where layout is performed. For visualization purpose 2 or 3 dimensions are normally enough. Note: Memory consumptions grows exponentially with number of dimensions. ")]),t("input-flag",{attrs:{label:"Follow bounding box",step:"1"},model:{value:n.fixedViewBox,callback:function(e){n.fixedViewBox=e},expression:"fixedViewBox"}},[n._v(" Setting this to true will disable pan/zoom but will always keep the graph visible. This is not part of the layout algorithm. Just a view setting of the renderer. ")]),n.loading?t("div",[n._v("Loading graph...")]):n._e()],1):n._e(),n.loading?n._e():t("div",{staticClass:"layout-box"},[t("a",{staticClass:"btn",attrs:{href:"#"},on:{click:function(e){return e.preventDefault(),n.toggleLayoutRun(e)}}},[n._v(n._s(n.isRunning?"Stop layout":"Start layout"))])])])},a=[],r=t("5530"),s=(t("13d5"),t("d3b7"),t("d81d"),t("b64b"),t("9aeb")),c=t("d4ec"),d=t("bee2"),l=t("262e"),u=t("2caf"),p=function(n){Object(l["a"])(t,n);var e=Object(u["a"])(t);function t(n){var o,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Object(c["a"])(this,t);var a=Object(s["f"])({gl:n,vertex:"\n    uniform mat4 modelViewProjection;\n    uniform float width;\n    uniform vec2 resolution;\n\n    attribute vec4 color;\n    attribute vec3 from, to;\n    attribute vec2 point;\n\n    varying vec4 vColor;\n    varying vec2 vPoint;\n\n    void main() {\n      vec4 clip0 = modelViewProjection * vec4(from, 1.0);\n      vec4 clip1 = modelViewProjection * vec4(to, 1.0);\n\n      vec2 screen0 = resolution * (0.5 * clip0.xy/clip0.w + 0.5);\n      vec2 screen1 = resolution * (0.5 * clip1.xy/clip1.w + 0.5);\n\n      vec2 xBasis = normalize(screen1 - screen0);\n      vec2 yBasis = vec2(-xBasis.y, xBasis.x);\n\n      // Offset the original points:\n      vec2 pt0 = screen0 + width * point.x * yBasis;\n      vec2 pt1 = screen1 + width * point.x * yBasis;\n\n      vec2 pt = mix(pt0, pt1, point.y);\n      vec4 clip = mix(clip0, clip1, point.y);\n\n      gl_Position = vec4(clip.w * (2.0 * pt/resolution - 1.0), clip.z, clip.w);\n      vColor = color.abgr; // mix(.abgr, aToColor.abgr, aPosition.y);\n    }",fragment:"\n    precision highp float;\n    varying vec4 vColor;\n\n    void main() {\n      gl_FragColor = vColor;\n    }",attributes:{color:new s["a"]},instanced:{point:new s["c"]([-.5,0,-.5,1,.5,1,-.5,0,.5,1,.5,0])}});return o=e.call(this,a),o.width=i.width||2,o}return Object(d["a"])(t,[{key:"draw",value:function(n,e){this.uniforms||(this.uniforms={modelViewProjection:this.modelViewProjection,width:this.width,resolution:[e.width,e.height]}),this.uniforms.resolution[0]=e.width,this.uniforms.resolution[1]=e.height,this.program.draw(this.uniforms)}},{key:"forEachLine",value:function(n){for(var e=this.program.getCount(),t=0;t<e;++t){var o=this.program.get(t),i={x:o.from[0],y:o.from[1],z:o.from[2],color:o.color},a={x:o.to[0],y:o.to[1],z:o.to[2],color:o.color};n(i,a)}}},{key:"getLineColor",value:function(n){var e=this.program.getCount(),t=n?n.color:e>0?this.program.get(0).color:4294967295;return[t>>24&1,t>>16&1,t>>8&1,t>>0&1]}}]),t}(s["b"]),f=function(n){Object(l["a"])(t,n);var e=Object(u["a"])(t);function t(n){Object(c["a"])(this,t);var o=Object(s["f"])({gl:n,vertex:"\n  uniform mat4 modelViewProjection;\n\n  attribute float size;\n  attribute vec3 position;\n  attribute vec4 color;\n\n  attribute vec2 point; // instanced\n\n  varying vec4 vColor;\n  varying vec2 vPoint;\n  void main() {\n    gl_Position = modelViewProjection * vec4(position + vec3(point * size, 0.), 1.0);\n    vColor = color.abgr;\n    vPoint = point;\n  }",fragment:"\n  precision highp float;\n  varying vec4 vColor;\n  varying vec2 vPoint;\n  void main() {\n    float dist = length(vPoint);\n    if (dist >= 0.5) {discard;}\n    gl_FragColor = vColor;\n  }",attributes:{color:new s["a"]},instanced:{point:new s["c"]([-.5,-.5,-.5,.5,.5,.5,.5,.5,.5,-.5,-.5,-.5])},preDrawHook:function(){return"gl.enable(gl.DEPTH_TEST);\n        gl.depthFunc(gl.LEQUAL);"},postDrawHook:function(){return"gl.disable(gl.DEPTH_TEST);"}});return e.call(this,o)}return Object(d["a"])(t)}(s["b"]),_=t("00c7"),h=t.n(_),g=h()({}),v=g,b=(t("acd6"),t("577a")),m=t.n(b);function y(n,e){return m()(n,Object.assign({dimensions:2,timeStep:.5,springLength:10,gravity:-12,springCoefficient:.8,dragCoefficient:.9,debug:!1},e))}t("4ec9"),t("3ca3"),t("ddb0"),t("6062"),t("fb6a"),t("4e82");var B=t("148d"),w=t.n(B);function H(n){var e,t,o,i,a,r,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=!0,l=!1,u=!1;return v.on("load-graph",_),{dispose:P,runLayout:g,updateLayoutSettings:b,setFixedViewBox:m};function _(n,i){o&&(o.dispose(),t.dispose(),o=null,u=!1,cancelAnimationFrame(r)),o=B(),e=n,window.graph=e,Object(s["d"])(o,{showGrid:!0,lineColor:4294967056,maxAlpha:16,showCursor:!1}),t=y(e,c);var a=-42,d=-42,l=42,p=42;h(1.2*Math.max(l-a,p-d)),w(),r=requestAnimationFrame(H)}function h(n){o.setViewBox({left:-n,top:-n,right:n,bottom:n})}function g(n){u=n}function b(n){var o=["timeStep","springLength","springCoefficient","dimensions","dragCoefficient","gravity","theta"],i=c&&c.dimensions||2;if(c=o.reduce((function(e,t){return e[t]=n[t],e}),{}),t)if(c.dimensions!==i){var a=t;t=y(e,c),e.forEachNode((function(n){for(var e=a.getNodePosition(n.id),o=Object.keys(e).map((function(n){return e[n]})),r=i;r<c.dimensions;++r)o.push(Math.random());o.unshift(n.id),t.setNodePosition.apply(t,o)})),a.dispose()}else o.forEach((function(n){t.simulator[n](c[n])}))}function m(n){l=n}function B(){var e=Object(s["e"])(n);return e.setClearColor(12/255,41/255,82/255,1),e}function w(){i=new f(o.getGL(),{capacity:e.getNodesCount()}),e.forEachNode((function(n){var e=t.getNodePosition(n.id),o=1;n.data&&n.data.size?o=n.data.size:(n.data||(n.data={}),n.data.size=o),n.ui={size:o,position:[e.x,e.y,e.z||0],color:2432236799},n.uiId=i.add(n.ui)})),a=new p(o.getGL(),{capacity:e.getLinksCount()}),e.forEachLink((function(n){var e=t.getNodePosition(n.fromId),o=t.getNodePosition(n.toId),i={from:[e.x,e.y,e.z||0],to:[o.x,o.y,o.z||0],color:4294967056};n.ui=i,n.uiId=a.add(n.ui)})),o.appendChild(a),o.appendChild(i)}function H(){if(r=requestAnimationFrame(H),u&&(t.step(),l)){var n=t.getGraphRect();o.setViewBox({left:n.min_x,top:n.min_y,right:n.max_x,bottom:n.max_y})}G(),o.renderFrame()}function G(){var n=["x","y","z"];e.forEachNode((function(e){for(var o=t.getNodePosition(e.id),a=e.ui.position,r=0;r<3;++r)a[r]=o[n[r]]||0;i.update(e.uiId,e.ui)})),d&&e.forEachLink((function(e){for(var o=t.getNodePosition(e.fromId),i=t.getNodePosition(e.toId),r=e.ui,s=r.from,c=r.to,d=0;d<3;++d)s[d]=o[n[d]]||0,c[d]=i[n[d]]||0;a.update(e.uiId,e.ui)}))}function P(){cancelAnimationFrame(r),o.dispose(),v.off("load-graph",_)}}function G(){return["Miserables","Binary","HB/blckhole","Bai/rw5151","HB/bcsstm13","HB/lshp1882","HB/plat1919","HB/bcsstk26","Bai/dw256A","Bai/tols2000","Bai/dw1024","Bai/rdb2048","Pajek/CSphd","GHS_indef/laser","Bai/bfwa398","Bai/bfwa62","Bai/bfwb398","Bai/bfwb62","Bai/bfwb782","Bai/bwm200","Bai/cdde1","Bai/cdde2","Bai/cdde3","Bai/cdde4","Bai/cdde5","Bai/cdde6","Bai/ck104","Bai/ck400","Bai/ck656","Bai/dw256B","Bai/dwa512","Bai/dwb512","Bai/dwg961a","Bai/lop163","Bai/mhdb416","Bai/odepa400","Bai/olm100","Bai/olm1000","Bai/olm500","Bai/pde225","Bai/pde900","Bai/qh1484","Bai/qh768","Bai/qh882","Bai/rdb1250","Bai/rdb1250l","Bai/rdb200","Bai/rdb200l","Bai/rdb450","Bai/rdb450l","Bai/rdb800l","Bai/rdb968","Bai/rw136","Bai/rw496","Bai/tols1090","Bai/tols340","Bai/tols90","Bai/tub100","Bai/tub1000","Barabasi/NotreDame_yeast","Bates/Chem97ZtZ","FEMLAB/poisson2D","FEMLAB/problem1","FIDAP/ex1","FIDAP/ex5","Grund/b1_ss","Grund/d_ss","Grund/poli","Gset/G11","Gset/G12","Gset/G13","Gset/G14","Gset/G15","Gset/G16","Gset/G17","Gset/G18","Gset/G19","Gset/G20","Gset/G21","Gset/G32","Gset/G33","Gset/G34","Gset/G35","Gset/G36","Gset/G37","Gset/G38","Gset/G39","Gset/G40","Gset/G41","Gset/G42","Gset/G43","Gset/G44","Gset/G45","Gset/G46","Gset/G47","Gset/G48","Gset/G49","Gset/G50","Gset/G51","Gset/G52","Gset/G53","Gset/G54","Gset/G55","Gset/G57","Hamrle/Hamrle1","HB/1138_bus","HB/494_bus","HB/662_bus","HB/685_bus","HB/abb313","HB/arc130","HB/ash219","HB/ash292","HB/ash331","HB/ash608","HB/ash85","HB/ash958","HB/bcspwr01","HB/bcspwr02","HB/bcspwr03","HB/bcspwr04","HB/bcspwr05","HB/bcspwr06","HB/bcspwr07","HB/bcspwr08","HB/bcspwr09","HB/bcsstk01","HB/bcsstk02","HB/bcsstk03","HB/bcsstk04","HB/bcsstk05","HB/bcsstk06","HB/bcsstk07","HB/bcsstk19","HB/bcsstk20","HB/bcsstk22","HB/bcsstm01","HB/bcsstm02","HB/bcsstm03","HB/bcsstm04","HB/bcsstm05","HB/bcsstm06","HB/bcsstm07","HB/bcsstm08","HB/bcsstm09","HB/bcsstm11","HB/bcsstm19","HB/bcsstm20","HB/bcsstm21","HB/bcsstm22","HB/bcsstm23","HB/bcsstm24","HB/bcsstm26","HB/bp_0","HB/bp_1000","HB/bp_1200","HB/bp_1400","HB/bp_1600","HB/bp_200","HB/bp_400","HB/bp_600","HB/bp_800","HB/can_1054","HB/can_1072","HB/can_144","HB/can_161","HB/can_187","HB/can_229","HB/can_24","HB/can_256","HB/can_268","HB/can_292","HB/can_445","HB/can_61","HB/can_62","HB/can_634","HB/can_715","HB/can_73","HB/can_838","HB/can_96","HB/curtis54","HB/dwt_1005","HB/dwt_1007","HB/dwt_1242","HB/dwt_162","HB/dwt_193","HB/dwt_198","HB/dwt_209","HB/dwt_221","HB/dwt_234","HB/dwt_245","HB/dwt_2680","HB/dwt_307","HB/dwt_310","HB/dwt_346","HB/dwt_361","HB/dwt_419","HB/dwt_492","HB/dwt_503","HB/dwt_512","HB/dwt_59","HB/dwt_592","HB/dwt_607","HB/dwt_66","HB/dwt_72","HB/dwt_758","HB/dwt_869","HB/dwt_87","HB/dwt_878","HB/dwt_918","HB/dwt_992","HB/eris1176","HB/fs_183_1","HB/fs_183_3","HB/fs_183_4","HB/fs_183_6","HB/fs_541_1","HB/fs_541_2","HB/fs_541_3","HB/fs_541_4","HB/fs_680_1","HB/fs_680_2","HB/fs_680_3","HB/gent113","HB/gr_30_30","HB/gre_1107","HB/gre_115","HB/gre_185","HB/gre_216a","HB/gre_216b","HB/gre_343","HB/gre_512","HB/hor_131","HB/ibm32","HB/illc1033","HB/impcol_a","HB/impcol_b","HB/impcol_c","HB/impcol_d","HB/impcol_e","HB/jagmesh1","HB/jagmesh2","HB/jagmesh3","HB/jagmesh4","HB/jagmesh5","HB/jagmesh7","HB/jagmesh8","HB/jagmesh9","HB/jgl009","HB/jgl011","HB/jpwh_991","HB/lap_25","HB/lns_131","HB/lns_511","HB/lnsp_131","HB/lnsp_511","HB/lock_700","HB/lshp1009","HB/lshp1270","HB/lshp1561","HB/lshp2233","HB/lshp2614","HB/lshp3025","HB/lshp3466","HB/lshp_265","HB/lshp_406","HB/lshp_577","HB/lshp_778","HB/lund_a","HB/lund_b","HB/mcca","HB/nnc261","HB/nnc666","HB/nos1","HB/nos2","HB/nos4","HB/nos5","HB/nos6","HB/nos7","HB/orsirr_1","HB/orsirr_2","HB/plat362","HB/plskz362","HB/pores_1","HB/pores_3","HB/rgg010","HB/saylr1","HB/saylr3","HB/sherman1","HB/sherman4","HB/shl_0","HB/shl_200","HB/shl_400","HB/sstmodel","HB/steam1","HB/steam3","HB/str_0","HB/str_200","HB/str_400","HB/str_600","HB/well1033","HB/west0067","HB/west0132","HB/west0156","HB/west0167","HB/west0381","HB/west0479","HB/west0497","HB/west0655","HB/west0989","HB/west1505","HB/west2021","HB/will199","HB/will57","HB/wm1","HB/wm2","HB/wm3","HB/young1c","HB/young2c","HB/young3c","HB/young4c","JGD_BIBD/bibd_11_5","JGD_BIBD/bibd_12_4","JGD_BIBD/bibd_12_5","JGD_BIBD/bibd_15_3","JGD_BIBD/bibd_17_3","JGD_BIBD/bibd_17_4","JGD_BIBD/bibd_17_4b","JGD_BIBD/bibd_81_2","JGD_BIBD/bibd_9_3","JGD_BIBD/bibd_9_5","JGD_CAG/CAG_mat364","JGD_CAG/CAG_mat72","JGD_Forest/TF10","JGD_Forest/TF11","JGD_Forest/TF12","JGD_Forest/TF13","JGD_Franz/Franz1","JGD_Franz/Franz3","JGD_G5/IG5-10","JGD_G5/IG5-6","JGD_G5/IG5-7","JGD_G5/IG5-8","JGD_G5/IG5-9","JGD_GL6/GL6_D_10","JGD_GL6/GL6_D_6","JGD_GL6/GL6_D_7","JGD_GL6/GL6_D_8","JGD_GL6/GL6_D_9","JGD_GL7d/GL7d10","JGD_GL7d/GL7d11","JGD_GL7d/GL7d26","JGD_Homology/ch3-3-b1","JGD_Homology/ch3-3-b2","JGD_Homology/ch4-4-b1","JGD_Homology/ch4-4-b2","JGD_Homology/ch4-4-b3","JGD_Homology/ch5-5-b1","JGD_Homology/ch5-5-b2","JGD_Homology/ch5-5-b3","JGD_Homology/ch5-5-b4","JGD_Homology/ch6-6-b1","JGD_Homology/ch6-6-b2","JGD_Homology/ch6-6-b5","JGD_Homology/ch7-6-b1","JGD_Homology/ch7-7-b1","JGD_Homology/ch7-8-b1","JGD_Homology/ch7-9-b1","JGD_Homology/ch8-8-b1","JGD_Homology/cis-n4c6-b1","JGD_Homology/cis-n4c6-b15","JGD_Homology/cis-n4c6-b2","JGD_Homology/klein-b1","JGD_Homology/klein-b2","JGD_Homology/mk10-b1","JGD_Homology/mk10-b2","JGD_Homology/mk10-b4","JGD_Homology/mk11-b1","JGD_Homology/mk12-b1","JGD_Homology/mk9-b1","JGD_Homology/mk9-b2","JGD_Homology/mk9-b3","JGD_Homology/n2c6-b1","JGD_Homology/n2c6-b10","JGD_Homology/n2c6-b2","JGD_Homology/n2c6-b3","JGD_Homology/n2c6-b9","JGD_Homology/n3c4-b1","JGD_Homology/n3c4-b2","JGD_Homology/n3c4-b3","JGD_Homology/n3c4-b4","JGD_Homology/n3c5-b1","JGD_Homology/n3c5-b2","JGD_Homology/n3c5-b3","JGD_Homology/n3c5-b4","JGD_Homology/n3c5-b5","JGD_Homology/n3c5-b6","JGD_Homology/n3c5-b7","JGD_Homology/n3c6-b1","JGD_Homology/n3c6-b10","JGD_Homology/n3c6-b11","JGD_Homology/n3c6-b2","JGD_Homology/n3c6-b3","JGD_Homology/n4c5-b1","JGD_Homology/n4c5-b10","JGD_Homology/n4c5-b11","JGD_Homology/n4c5-b2","JGD_Homology/n4c5-b3","JGD_Homology/n4c5-b9","JGD_Homology/n4c6-b1","JGD_Homology/n4c6-b15","JGD_Homology/n4c6-b2","JGD_Kocay/Trec10","JGD_Kocay/Trec3","JGD_Kocay/Trec4","JGD_Kocay/Trec5","JGD_Kocay/Trec6","JGD_Kocay/Trec7","JGD_Kocay/Trec8","JGD_Kocay/Trec9","JGD_Margulies/cat_ears_2_1","JGD_Margulies/cat_ears_2_4","JGD_Margulies/cat_ears_3_1","JGD_Margulies/cat_ears_4_1","JGD_Margulies/flower_4_1","JGD_Margulies/flower_5_1","JGD_Margulies/flower_7_1","JGD_Margulies/flower_8_1","JGD_Margulies/kneser_6_2_1","JGD_Margulies/wheel_3_1","JGD_Margulies/wheel_4_1","JGD_Margulies/wheel_5_1","JGD_Margulies/wheel_6_1","JGD_Margulies/wheel_7_1","JGD_Relat/rel3","JGD_Relat/rel4","JGD_Relat/rel5","JGD_Relat/rel6","JGD_Relat/relat3","JGD_Relat/relat4","JGD_Relat/relat5","JGD_Relat/relat6","JGD_SL6/D_10","JGD_SL6/D_11","JGD_SL6/D_5","JGD_SL6/D_6","JGD_SPG/08blocks","JGD_SPG/EX1","JGD_SPG/EX2","JGD_Trefethen/Trefethen_150","JGD_Trefethen/Trefethen_20","JGD_Trefethen/Trefethen_200","JGD_Trefethen/Trefethen_200b","JGD_Trefethen/Trefethen_20b","JGD_Trefethen/Trefethen_300","JGD_Trefethen/Trefethen_500","JGD_Trefethen/Trefethen_700","LPnetlib/lp_adlittle","LPnetlib/lp_afiro","LPnetlib/lp_agg","LPnetlib/lp_agg2","LPnetlib/lp_agg3","LPnetlib/lp_bandm","LPnetlib/lp_beaconfd","LPnetlib/lp_blend","LPnetlib/lp_bnl1","LPnetlib/lp_bore3d","LPnetlib/lp_brandy","LPnetlib/lp_capri","LPnetlib/lp_czprob","LPnetlib/lp_degen2","LPnetlib/lp_e226","LPnetlib/lp_etamacro","LPnetlib/lp_fffff800","LPnetlib/lp_finnis","LPnetlib/lp_fit1p","LPnetlib/lp_ganges","LPnetlib/lp_gfrd_pnc","LPnetlib/lp_grow15","LPnetlib/lp_grow7","LPnetlib/lp_israel","LPnetlib/lp_kb2","LPnetlib/lp_ken_07","LPnetlib/lp_lotfi","LPnetlib/lp_modszk1","LPnetlib/lp_perold","LPnetlib/lp_pilot4","LPnetlib/lp_qap8","LPnetlib/lp_recipe","LPnetlib/lp_sc105","LPnetlib/lp_sc205","LPnetlib/lp_sc50a","LPnetlib/lp_sc50b","LPnetlib/lp_scagr25","LPnetlib/lp_scagr7","LPnetlib/lp_scfxm1","LPnetlib/lp_scfxm2","LPnetlib/lp_scfxm3","LPnetlib/lp_scorpion","LPnetlib/lp_scrs8","LPnetlib/lp_scsd1","LPnetlib/lp_scsd6","LPnetlib/lp_sctap1","LPnetlib/lp_sctap2","LPnetlib/lp_sctap3","LPnetlib/lp_share1b","LPnetlib/lp_share2b","LPnetlib/lp_shell","LPnetlib/lp_ship04l","LPnetlib/lp_ship04s","LPnetlib/lp_ship08s","LPnetlib/lp_ship12s","LPnetlib/lp_sierra","LPnetlib/lp_stair","LPnetlib/lp_standata","LPnetlib/lp_standgub","LPnetlib/lp_standmps","LPnetlib/lp_stocfor1","LPnetlib/lp_tuff","LPnetlib/lp_vtp_base","LPnetlib/lpi_bgdbg1","LPnetlib/lpi_bgetam","LPnetlib/lpi_bgprtr","LPnetlib/lpi_box1","LPnetlib/lpi_chemcom","LPnetlib/lpi_cplex2","LPnetlib/lpi_ex72a","LPnetlib/lpi_ex73a","LPnetlib/lpi_forest6","LPnetlib/lpi_galenet","LPnetlib/lpi_itest2","LPnetlib/lpi_itest6","LPnetlib/lpi_klein1","LPnetlib/lpi_klein2","LPnetlib/lpi_mondou2","LPnetlib/lpi_pang","LPnetlib/lpi_pilot4i","LPnetlib/lpi_qual","LPnetlib/lpi_reactor","LPnetlib/lpi_refinery","LPnetlib/lpi_vol1","LPnetlib/lpi_woodinfe","MathWorks/Harvard500","MathWorks/Pd_rhs","MathWorks/pivtol","MathWorks/QRpivot","Meszaros/cep1","Meszaros/cr42","Meszaros/farm","Meszaros/gams10a","Meszaros/gams10am","Meszaros/gams30a","Meszaros/gams30am","Meszaros/gams60am","Meszaros/gas11","Meszaros/iiasa","Meszaros/iprob","Meszaros/kleemin","Meszaros/l9","Meszaros/model1","Meszaros/model2","Meszaros/nemsafm","Meszaros/nemscem","Meszaros/nsic","Meszaros/p0033","Meszaros/p0040","Meszaros/p0201","Meszaros/p0282","Meszaros/p0291","Meszaros/p0548","Meszaros/p2756","Meszaros/problem","Meszaros/qiulp","Meszaros/refine","Meszaros/rosen7","Meszaros/scagr7-2c","Meszaros/scrs8-2b","Meszaros/scrs8-2c","Meszaros/small","Meszaros/zed","Morandini/robot","Morandini/rotor1","Muite/Chebyshev1","NYPA/Maragal_1","NYPA/Maragal_2","Oberwolfach/LF10","Oberwolfach/LFAT5","Pajek/Cities","Pajek/divorce","Pajek/EPA","Pajek/Erdos02","Pajek/Erdos971","Pajek/Erdos972","Pajek/Erdos981","Pajek/Erdos982","Pajek/Erdos991","Pajek/Erdos992","Pajek/EVA","Pajek/football","Pajek/GD00_a","Pajek/GD00_c","Pajek/GD01_a","Pajek/GD01_A","Pajek/GD01_b","Pajek/GD01_c","Pajek/GD02_a","Pajek/GD02_b","Pajek/GD06_Java","Pajek/GD06_theory","Pajek/GD95_a","Pajek/GD95_b","Pajek/GD95_c","Pajek/GD96_a","Pajek/GD96_b","Pajek/GD96_c","Pajek/GD96_d","Pajek/GD97_a","Pajek/GD97_b","Pajek/GD97_c","Pajek/GD98_a","Pajek/GD98_b","Pajek/GD98_c","Pajek/GD99_b","Pajek/GD99_c","Pajek/GlossGT","Pajek/Journals","Pajek/Kohonen","Pajek/Ragusa16","Pajek/Ragusa18","Pajek/Roget","Pajek/Sandi_authors","Pajek/Sandi_sandi","Pajek/SciMet","Pajek/SmaGri","Pajek/SmallW","Pajek/Stranke94","Pajek/Tina_AskCal","Pajek/Tina_AskCog","Pajek/Tina_DisCal","Pajek/Tina_DisCog","Pajek/USAir97","Pajek/USpowerGrid","Pajek/WorldCities","Pajek/yeast","Pothen/mesh1e1","Pothen/mesh1em1","Pothen/mesh1em6","Pothen/mesh2e1","Pothen/mesh2em5","Pothen/mesh3e1","Pothen/mesh3em5","Pothen/sphere2","Pothen/sphere3","Qaplib/lp_nug05","Qaplib/lp_nug06","Qaplib/lp_nug07","Qaplib/lp_nug08","Rajat/rajat02","Rajat/rajat05","Rajat/rajat11","Rajat/rajat14","Rajat/rajat19","Sandia/oscil_dcop_01","Sandia/oscil_dcop_02","Sandia/oscil_dcop_03","Sandia/oscil_dcop_04","Sandia/oscil_dcop_05","Sandia/oscil_dcop_06","Sandia/oscil_dcop_07","Sandia/oscil_dcop_08","Sandia/oscil_dcop_09","Sandia/oscil_dcop_10","Sandia/oscil_dcop_11","Sandia/oscil_dcop_12","Sandia/oscil_dcop_13","Sandia/oscil_dcop_14","Sandia/oscil_dcop_15","Sandia/oscil_dcop_16","Sandia/oscil_dcop_17","Sandia/oscil_dcop_18","Sandia/oscil_dcop_19","Sandia/oscil_dcop_20","Sandia/oscil_dcop_21","Sandia/oscil_dcop_22","Sandia/oscil_dcop_23","Sandia/oscil_dcop_24","Sandia/oscil_dcop_25","Sandia/oscil_dcop_26","Sandia/oscil_dcop_27","Sandia/oscil_dcop_28","Sandia/oscil_dcop_29","Sandia/oscil_dcop_30","Sandia/oscil_dcop_31","Sandia/oscil_dcop_32","Sandia/oscil_dcop_33","Sandia/oscil_dcop_34","Sandia/oscil_dcop_35","Sandia/oscil_dcop_36","Sandia/oscil_dcop_37","Sandia/oscil_dcop_38","Sandia/oscil_dcop_39","Sandia/oscil_dcop_40","Sandia/oscil_dcop_41","Sandia/oscil_dcop_42","Sandia/oscil_dcop_43","Sandia/oscil_dcop_44","Sandia/oscil_dcop_45","Sandia/oscil_dcop_46","Sandia/oscil_dcop_47","Sandia/oscil_dcop_48","Sandia/oscil_dcop_49","Sandia/oscil_dcop_50","Sandia/oscil_dcop_51","Sandia/oscil_dcop_52","Sandia/oscil_dcop_53","Sandia/oscil_dcop_54","Sandia/oscil_dcop_55","Sandia/oscil_dcop_56","Sandia/oscil_dcop_57","Sandia/oscil_trans_01","TOKAMAK/utm300","vanHeukelum/cage3","vanHeukelum/cage4","vanHeukelum/cage5","vanHeukelum/cage6","vanHeukelum/cage7","YZhou/circuit204"]}t("e9c4");var P=t("9032"),D=t.n(P),x=t("4f2c"),k=t.n(x),S=J();function L(n){if("Miserables"===n)return Promise.resolve(D.a);if("Binary"===n)return Promise.resolve(k.a.balancedBinTree(10));var e=S.get(n);return e?Promise.resolve(j(e.links,e.recordsPerEdge)):fetch("https://s3.amazonaws.com/yasiv_uf/out/".concat(n,"/index.js"),{mode:"cors"}).then((function(n){return n.json()})).then((function(e){return S.put(n,e),j(e.links,e.recordsPerEdge)}))}function j(n,e){for(var t=w()(),o=0;o<n.length-1;o+=e)t.addLink(n[o],n[o+1]);return t}function J(){var n="localStorage"in window;return{get:function(e){if(!n)return null;var t=JSON.parse(window.localStorage.getItem(e));return t&&void 0!==t.recordsPerEdge?t:null},put:function(e,t){if(!n)return!1;try{window.localStorage.setItem(e,JSON.stringify(t))}catch(o){window.localStorage.clear()}}}}var C=t("9cf4"),M=t.n(C),T=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"block"},[t("div",{staticClass:"row"},[t("div",{staticClass:"col"},[n._v(n._s(n.label))]),t("div",{staticClass:"col"},[t("input",{directives:[{name:"model",rawName:"v-model",value:n.inputValue,expression:"inputValue"}],attrs:{type:"number",step:n.step,autocomplete:"off",autocorrect:"off",autocapitalize:"off",spellcheck:"false"},domProps:{value:n.inputValue},on:{focus:n.selectAll,input:function(e){e.target.composing||(n.inputValue=e.target.value)}}})]),t("help-icon",{class:{open:n.helpVisible},on:{show:function(e){n.helpVisible=!n.helpVisible}}})],1),n.helpVisible?t("div",{staticClass:"row help"},[n._t("default")],2):n._e()])},I=[],E=(t("a9e3"),function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("a",{staticClass:"help-icon",attrs:{href:"#",title:"Click for more details"},on:{click:function(e){return e.preventDefault(),n.show(e)}}},[t("svg",{attrs:{version:"1.1",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"9",height:"14",viewBox:"0 0 9 14",fill:"#267fcd"}},[t("path",{attrs:{d:"M5.5 9.812v1.875q0 0.125-0.094 0.219t-0.219 0.094h-1.875q-0.125 0-0.219-0.094t-0.094-0.219v-1.875q0-0.125 0.094-0.219t0.219-0.094h1.875q0.125 0 0.219 0.094t0.094 0.219zM7.969 5.125q0 0.422-0.121 0.789t-0.273 0.598-0.43 0.465-0.449 0.34-0.477 0.277q-0.32 0.18-0.535 0.508t-0.215 0.523q0 0.133-0.094 0.254t-0.219 0.121h-1.875q-0.117 0-0.199-0.145t-0.082-0.293v-0.352q0-0.648 0.508-1.223t1.117-0.848q0.461-0.211 0.656-0.438t0.195-0.594q0-0.328-0.363-0.578t-0.84-0.25q-0.508 0-0.844 0.227-0.273 0.195-0.836 0.898-0.102 0.125-0.242 0.125-0.094 0-0.195-0.062l-1.281-0.977q-0.102-0.078-0.121-0.195t0.043-0.219q1.25-2.078 3.625-2.078 0.625 0 1.258 0.242t1.141 0.648 0.828 0.996 0.32 1.238z"}})])])}),z=[],F={methods:{show:function(){this.$emit("show")}}},q=F,N=t("2877"),O=Object(N["a"])(q,E,z,!1,null,null,null),V=O.exports,A={components:{HelpIcon:V},props:{label:String,value:Number,step:{default:"0.1",type:String}},methods:{selectAll:function(n){n.target.select()}},data:function(){return{helpVisible:!1,inputValue:this.value}},watch:{inputValue:function(n){this.$emit("input",parseFloat(n))}}},R=A,Q=(t("e252"),Object(N["a"])(R,T,I,!1,null,null,null)),W=Q.exports,$=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"block"},[t("div",{staticClass:"row"},[t("div",{staticClass:"col"},[n._v(n._s(n.label))]),t("div",{staticClass:"col"},[t("input",{directives:[{name:"model",rawName:"v-model",value:n.inputValue,expression:"inputValue"}],attrs:{type:"checkbox"},domProps:{checked:Array.isArray(n.inputValue)?n._i(n.inputValue,null)>-1:n.inputValue},on:{change:function(e){var t=n.inputValue,o=e.target,i=!!o.checked;if(Array.isArray(t)){var a=null,r=n._i(t,a);o.checked?r<0&&(n.inputValue=t.concat([a])):r>-1&&(n.inputValue=t.slice(0,r).concat(t.slice(r+1)))}else n.inputValue=i}}})]),t("help-icon",{class:{open:n.helpVisible},on:{show:function(e){n.helpVisible=!n.helpVisible}}})],1),n.helpVisible?t("div",{staticClass:"row help"},[n._t("default")],2):n._e()])},K=[],U={components:{HelpIcon:V},props:{label:String,value:Boolean},methods:{selectAll:function(n){n.target.select()}},data:function(){return{helpVisible:!1,inputValue:this.value}},watch:{inputValue:function(n){this.$emit("input",n)}}},X=U,Y=(t("aedb"),Object(N["a"])(X,$,K,!1,null,null,null)),Z=Y.exports,nn=M()({graph:"Miserables",timeStep:.5,springLength:10,springCoefficient:.8,dragCoefficient:.9,dimensions:2,theta:.8,gravity:-12},{useSearch:!0}),en={name:"app",components:{InputValue:W,InputFlag:Z},methods:{toggleLayoutRun:function(){this.isRunning=!this.isRunning,this.scene.runLayout(this.isRunning)},loadNewGraph:function(n){var e=this;this.loading=!0,this.stats=null,this.isRunning=!1,L(n).then((function(n){v.fire("load-graph",n,e.selectedLayout),e.loading=!1}))},onGraphLoaded:function(){this.isRunning=!1}},watch:{layoutSettings:{deep:!0,handler:function(n){this.scene.updateLayoutSettings(n),nn.set(n)}},fixedViewBox:function(n){this.scene.setFixedViewBox(n)},selectedGraph:function(n){nn.set("graph",n),this.loadNewGraph(n)}},data:function(){var n=G();return{isRunning:!1,fixedViewBox:!1,selectedGraph:nn.get("graph"),settingsOpen:window.innerWidth>500,loading:!1,layoutSettings:{timeStep:nn.get("timeStep"),springLength:nn.get("springLength"),springCoefficient:nn.get("springCoefficient"),dragCoefficient:nn.get("dragCoefficient"),dimensions:nn.get("dimensions"),theta:nn.get("theta"),gravity:nn.get("gravity")},graphs:n}},mounted:function(){var n=document.getElementById("cnv");this.scene=H(n,Object(r["a"])({},this.layoutSettings)),this.loadNewGraph(this.selectedGraph),v.on("load-graph",this.onGraphLoaded)},beforeDestroy:function(){this.scene&&this.scene.dispose()}},tn=en,on=(t("7faf"),Object(N["a"])(tn,i,a,!1,null,null,null)),an=on.exports;function rn(n,e){return n.addEventListener("drop",i,!0),n.addEventListener("dragover",a),n.addEventListener("dragenter",o),n.addEventListener("dragleave",s),n.addEventListener("dragend",s),{dispose:t};function t(){n.removeEventListener("drop",i),n.removeEventListener("dragover",a),n.removeEventListener("dragenter",o),n.removeEventListener("dragleave",s),n.removeEventListener("dragend",s)}function o(n){r(n)&&n.preventDefault()}function i(n){s(),n.preventDefault();var t,o,i=n.dataTransfer,a=[];if(i.items)for(t=0;t<i.items.length;t++)"file"==i.items[t].kind&&(o=i.items[t].getAsFile(),a.push(o));else for(t=0;t<i.files.length;t++)o=i.files[t],a.push(o);e(a)}function a(e){r(e)&&(e.preventDefault(),n.classList.add("drag-over"))}function r(n){if(!n.dataTransfer)return!1;if(n.dataTransfer.files&&n.dataTransfer.files.length>0)return!0;var e=n.dataTransfer.items;if(!e)return!1;for(var t=0;t<e.length;++t)if("file"===e[t].kind)return!0;return!1}function s(){n.classList.remove("drag-over")}}var sn=t("9469"),cn=t.n(sn),dn=t("8392"),ln=t.n(dn);function un(n){var e=n[0],t=new FileReader;function o(n){try{return cn()(n)}catch(e){console.log("error loading dot file: ",e)}}function i(n){try{return ln()(JSON.parse(n))}catch(e){console.log("error loading JSON: ",e)}}t.readAsText(e,"UTF-8"),t.onload=function(n){var e=n.target.result,t=o(e)||i(e);t&&v.fire("load-graph",t)},t.onerror=function(n){console.log("error loading dot file: ",n)}}o["a"].config.productionTip=!1,new o["a"]({render:function(n){return n(an)}}).$mount("#app"),rn(document.body,un)},"577a":function(n,e,t){var o=t("7037").default;t("4ec9"),t("d3b7"),t("3ca3"),t("ddb0"),t("fb6a"),t("159b"),t("9911"),t("9129"),t("a9e3"),n.exports=a,n.exports.simulator=t("d761");var i=t("d39a");function a(n,e){if(!n)throw new Error("Graph structure cannot be undefined");var a=e&&e.createSimulator||t("d761"),s=a(e);if(Array.isArray(e))throw new Error("Physics settings is expected to be an object");var c=n.version>19?C:J;e&&"function"===typeof e.nodeMass&&(c=e.nodeMass);var d=new Map,l={},u=0,p=s.settings.springTransform||r;H(),y();var f=!1,_={step:function(){if(0===u)return h(!0),!0;var n=s.step();_.lastMove=n,_.fire("step");var e=n/u,t=e<=.01;return h(t),t},getNodePosition:function(n){return j(n).pos},setNodePosition:function(n){var e=j(n);e.setPosition.apply(e,Array.prototype.slice.call(arguments,1))},getLinkPosition:function(n){var e=l[n];if(e)return{from:e.from.pos,to:e.to.pos}},getGraphRect:function(){return s.getBBox()},forEachBody:g,pinNode:function(n,e){var t=j(n.id);t.isPinned=!!e},isNodePinned:function(n){return j(n.id).isPinned},dispose:function(){n.off("changed",w),_.fire("disposed")},getBody:m,getSpring:b,getForceVectorLength:v,simulator:s,graph:n,lastMove:0};return i(_),_;function h(n){f!==n&&(f=n,B(n))}function g(n){d.forEach(n)}function v(){var n=0,e=0;return g((function(t){n+=Math.abs(t.force.x),e+=Math.abs(t.force.y)})),Math.sqrt(n*n+e*e)}function b(e,t){var i;if(void 0===t)i="object"!==o(e)?e:e.id;else{var a=n.hasLink(e,t);if(!a)return;i=a.id}return l[i]}function m(n){return d.get(n)}function y(){n.on("changed",w)}function B(n){_.fire("stable",n)}function w(e){for(var t=0;t<e.length;++t){var o=e[t];"add"===o.changeType?(o.node&&G(o.node.id),o.link&&D(o.link)):"remove"===o.changeType&&(o.node&&P(o.node),o.link&&x(o.link))}u=n.getNodesCount()}function H(){u=0,n.forEachNode((function(n){G(n.id),u+=1})),n.forEachLink(D)}function G(e){var t=d.get(e);if(!t){var o=n.getNode(e);if(!o)throw new Error("initBody() was called with unknown node id");var i=o.position;if(!i){var a=k(o);i=s.getBestNewBodyPosition(a)}t=s.addBodyAt(i),t.id=e,d.set(e,t),S(e),L(o)&&(t.isPinned=!0)}}function P(n){var e=n.id,t=d.get(e);t&&(d.delete(e),s.removeBody(t))}function D(n){S(n.fromId),S(n.toId);var e=d.get(n.fromId),t=d.get(n.toId),o=s.addSpring(e,t,n.length);p(n,o),l[n.id]=o}function x(e){var t=l[e.id];if(t){var o=n.getNode(e.fromId),i=n.getNode(e.toId);o&&S(o.id),i&&S(i.id),delete l[e.id],s.removeSpring(t)}}function k(n){var e=[];if(!n.links)return e;for(var t=Math.min(n.links.length,2),o=0;o<t;++o){var i=n.links[o],a=i.fromId!==n.id?d.get(i.fromId):d.get(i.toId);a&&a.pos&&e.push(a)}return e}function S(n){var e=d.get(n);if(e.mass=c(n),Number.isNaN(e.mass))throw new Error("Node mass should be a number")}function L(n){return n&&(n.isPinned||n.data&&n.data.isPinned)}function j(n){var e=d.get(n);return e||(G(n),e=d.get(n)),e}function J(e){var t=n.getLinks(e);return t?1+t.length/3:1}function C(e){var t=n.getLinks(e);return t?1+t.size/3:1}}function r(){}},6017:function(n,e,t){},7968:function(n,e,t){var o=t("c910");function i(n){var e=a(n);return new Function("options",e)}function a(n){var e=o(n),t="\n  if (!Number.isFinite(options.dragCoefficient)) throw new Error('dragCoefficient is not a finite number');\n\n  return {\n    update: function(body) {\n      ".concat(e("body.force.{var} -= options.dragCoefficient * body.velocity.{var};",{indent:6}),"\n    }\n  };\n");return t}n.exports=i,n.exports.generateCreateDragForceFunctionBody=a},"7faf":function(n,e,t){"use strict";t("b8ff")},"960d":function(n,e,t){t("99af");var o=t("c910");function i(n){var e=a(n);return new Function("options","random",e)}function a(n){var e=o(n),t="\n  if (!Number.isFinite(options.springCoefficient)) throw new Error('Spring coefficient is not a number');\n  if (!Number.isFinite(options.springLength)) throw new Error('Spring length is not a number');\n\n  return {\n    /**\n     * Updates forces acting on a spring\n     */\n    update: function (spring) {\n      var body1 = spring.from;\n      var body2 = spring.to;\n      var length = spring.length < 0 ? options.springLength : spring.length;\n      ".concat(e("var d{var} = body2.pos.{var} - body1.pos.{var};",{indent:6}),"\n      var r = Math.sqrt(").concat(e("d{var} * d{var}",{join:" + "}),");\n\n      if (r === 0) {\n        ").concat(e("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:8}),"\n        r = Math.sqrt(").concat(e("d{var} * d{var}",{join:" + "}),");\n      }\n\n      var d = r - length;\n      var coefficient = ((spring.coefficient > 0) ? spring.coefficient : options.springCoefficient) * d / r;\n\n      ").concat(e("body1.force.{var} += coefficient * d{var}",{indent:6}),";\n      body1.springCount += 1;\n      body1.springLength += r;\n\n      ").concat(e("body2.force.{var} -= coefficient * d{var}",{indent:6}),";\n      body2.springCount += 1;\n      body2.springLength += r;\n    }\n  };\n");return t}n.exports=i,n.exports.generateCreateSpringForceFunctionBody=a},a14e:function(n,e,t){},aedb:function(n,e,t){"use strict";t("a14e")},af87:function(n,e,t){t("99af"),n.exports=i,n.exports.generateFunctionBody=a;var o=t("c910");function i(n){var e=a(n);return new Function("bodies","settings","random",e)}function a(n){var e=o(n),t="\n  var boundingBox = {\n    ".concat(e("min_{var}: 0, max_{var}: 0,",{indent:4}),"\n  };\n\n  return {\n    box: boundingBox,\n\n    update: updateBoundingBox,\n\n    reset: resetBoundingBox,\n\n    getBestNewPosition: function (neighbors) {\n      var ").concat(e("base_{var} = 0",{join:", "}),";\n\n      if (neighbors.length) {\n        for (var i = 0; i < neighbors.length; ++i) {\n          let neighborPos = neighbors[i].pos;\n          ").concat(e("base_{var} += neighborPos.{var};",{indent:10}),"\n        }\n\n        ").concat(e("base_{var} /= neighbors.length;",{indent:8}),"\n      } else {\n        ").concat(e("base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;",{indent:8}),"\n      }\n\n      var springLength = settings.springLength;\n      return {\n        ").concat(e("{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,",{indent:8}),"\n      };\n    }\n  };\n\n  function updateBoundingBox() {\n    var i = bodies.length;\n    if (i === 0) return; // No bodies - no borders.\n\n    ").concat(e("var max_{var} = -Infinity;",{indent:4}),"\n    ").concat(e("var min_{var} = Infinity;",{indent:4}),"\n\n    while(i--) {\n      // this is O(n), it could be done faster with quadtree, if we check the root node bounds\n      var bodyPos = bodies[i].pos;\n      ").concat(e("if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};",{indent:6}),"\n      ").concat(e("if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};",{indent:6}),"\n    }\n\n    ").concat(e("boundingBox.min_{var} = min_{var};",{indent:4}),"\n    ").concat(e("boundingBox.max_{var} = max_{var};",{indent:4}),"\n  }\n\n  function resetBoundingBox() {\n    ").concat(e("boundingBox.min_{var} = boundingBox.max_{var} = 0;",{indent:4}),"\n  }\n");return t}},b8ff:function(n,e,t){},c910:function(n,e,t){t("a15b"),t("ac1f"),t("5319");var o=t("140e");n.exports=function(n){return e;function e(e,t){for(var i=t&&t.indent||0,a=t&&void 0!==t.join?t.join:"\n",r=Array(i+1).join(" "),s=[],c=0;c<n;++c){var d=o(c),l=0===c?"":r;s.push(l+e.replace(/{var}/g,d))}return s.join(a)}}},d761:function(n,e,t){t("4ec9"),t("d3b7"),t("3ca3"),t("ddb0"),t("a434"),t("f00c"),t("a9e3"),n.exports=l;var o=t("eb57"),i=t("e5af"),a=t("af87"),r=t("7968"),s=t("960d"),c=t("ed63"),d={};function l(n){var e=t("1042"),l=t("b4a5"),p=t("d39a");if(n){if(void 0!==n.springCoeff)throw new Error("springCoeff was renamed to springCoefficient");if(void 0!==n.dragCoeff)throw new Error("dragCoeff was renamed to dragCoefficient")}n=l(n,{springLength:10,springCoefficient:.8,gravity:-12,theta:.8,dragCoefficient:.9,timeStep:.5,adaptiveTimeStepWeight:0,dimensions:2,debug:!1});var f=d[n.dimensions];if(!f){var _=n.dimensions;f={Body:o(_,n.debug),createQuadTree:i(_),createBounds:a(_),createDragForce:r(_),createSpringForce:s(_),integrate:c(_)},d[_]=f}var h=f.Body,g=f.createQuadTree,v=f.createBounds,b=f.createDragForce,m=f.createSpringForce,y=f.integrate,B=function(n){return new h(n)},w=t("977a").random(42),H=[],G=[],P=g(n,w),D=v(H,n,w),x=m(n,w),k=b(n),S=0,L=[],j=new Map,J=0;T("nbody",z),T("spring",F);var C={bodies:H,quadTree:P,springs:G,settings:n,addForce:T,removeForce:I,getForces:E,step:function(){for(var e=0;e<L.length;++e)L[e](J);var t=y(H,n.timeStep,n.adaptiveTimeStepWeight);return J+=1,t},addBody:function(n){if(!n)throw new Error("Body is required");return H.push(n),n},addBodyAt:function(n){if(!n)throw new Error("Body position is required");var e=B(n);return H.push(e),e},removeBody:function(n){if(n){var e=H.indexOf(n);if(!(e<0))return H.splice(e,1),0===H.length&&D.reset(),!0}},addSpring:function(n,t,o,i){if(!n||!t)throw new Error("Cannot add null spring to force simulator");"number"!==typeof o&&(o=-1);var a=new e(n,t,o,i>=0?i:-1);return G.push(a),a},getTotalMovement:function(){return S},removeSpring:function(n){if(n){var e=G.indexOf(n);return e>-1?(G.splice(e,1),!0):void 0}},getBestNewBodyPosition:function(n){return D.getBestNewPosition(n)},getBBox:M,getBoundingBox:M,invalidateBBox:function(){console.warn("invalidateBBox() is deprecated, bounds always recomputed on `getBBox()` call")},gravity:function(e){return void 0!==e?(n.gravity=e,P.options({gravity:e}),this):n.gravity},theta:function(e){return void 0!==e?(n.theta=e,P.options({theta:e}),this):n.theta},random:w};return u(n,C),p(C),C;function M(){return D.update(),D.box}function T(n,e){if(j.has(n))throw new Error("Force "+n+" is already added");j.set(n,e),L.push(e)}function I(n){var e=L.indexOf(j.get(n));e<0||(L.splice(e,1),j.delete(n))}function E(){return j}function z(){if(0!==H.length){P.insertBodies(H);var n=H.length;while(n--){var e=H[n];e.isPinned||(e.reset(),P.updateBodyForce(e),k.update(e))}}}function F(){var n=G.length;while(n--)x.update(G[n])}}function u(n,e){for(var t in n)p(n,e,t)}function p(n,e,t){if(n.hasOwnProperty(t)&&"function"!==typeof e[t]){var o=Number.isFinite(n[t]);e[t]=o?function(o){if(void 0!==o){if(!Number.isFinite(o))throw new Error("Value of "+t+" should be a valid number.");return n[t]=o,e}return n[t]}:function(o){return void 0!==o?(n[t]=o,e):n[t]}}}},e252:function(n,e,t){"use strict";t("6017")},e5af:function(n,e,t){t("99af"),t("a15b");var o=t("c910"),i=t("140e");function a(n){var e=r(n);return new Function(e)()}function r(n){var e=o(n),t=Math.pow(2,n),a="\n".concat(u(),"\n").concat(l(n),"\n").concat(s(n),"\n").concat(d(n),"\n").concat(c(n),"\n\nfunction createQuadTree(options, random) {\n  options = options || {};\n  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;\n  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;\n\n  var gravity = options.gravity;\n  var updateQueue = [];\n  var insertStack = new InsertStack();\n  var theta = options.theta;\n\n  var nodesCache = [];\n  var currentInCache = 0;\n  var root = newNode();\n\n  return {\n    insertBodies: insertBodies,\n\n    /**\n     * Gets root node if it is present\n     */\n    getRoot: function() {\n      return root;\n    },\n\n    updateBodyForce: update,\n\n    options: function(newOptions) {\n      if (newOptions) {\n        if (typeof newOptions.gravity === 'number') {\n          gravity = newOptions.gravity;\n        }\n        if (typeof newOptions.theta === 'number') {\n          theta = newOptions.theta;\n        }\n\n        return this;\n      }\n\n      return {\n        gravity: gravity,\n        theta: theta\n      };\n    }\n  };\n\n  function newNode() {\n    // To avoid pressure on GC we reuse nodes.\n    var node = nodesCache[currentInCache];\n    if (node) {\n").concat(f("      node."),"\n      node.body = null;\n      node.mass = ").concat(e("node.mass_{var} = ",{join:""}),"0;\n      ").concat(e("node.min_{var} = node.max_{var} = ",{join:""}),"0;\n    } else {\n      node = new QuadNode();\n      nodesCache[currentInCache] = node;\n    }\n\n    ++currentInCache;\n    return node;\n  }\n\n  function update(sourceBody) {\n    var queue = updateQueue;\n    var v;\n    ").concat(e("var d{var};",{indent:4}),"\n    var r; \n    ").concat(e("var f{var} = 0;",{indent:4}),"\n    var queueLength = 1;\n    var shiftIdx = 0;\n    var pushIdx = 1;\n\n    queue[0] = root;\n\n    while (queueLength) {\n      var node = queue[shiftIdx];\n      var body = node.body;\n\n      queueLength -= 1;\n      shiftIdx += 1;\n      var differentBody = (body !== sourceBody);\n      if (body && differentBody) {\n        // If the current node is a leaf node (and it is not source body),\n        // calculate the force exerted by the current node on body, and add this\n        // amount to body's net force.\n        ").concat(e("d{var} = body.pos.{var} - sourceBody.pos.{var};",{indent:8}),"\n        r = Math.sqrt(").concat(e("d{var} * d{var}",{join:" + "}),");\n\n        if (r === 0) {\n          // Poor man's protection against zero distance.\n          ").concat(e("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10}),"\n          r = Math.sqrt(").concat(e("d{var} * d{var}",{join:" + "}),");\n        }\n\n        // This is standard gravitation force calculation but we divide\n        // by r^3 to save two operations when normalizing force vector.\n        v = gravity * body.mass * sourceBody.mass / (r * r * r);\n        ").concat(e("f{var} += v * d{var};",{indent:8}),"\n      } else if (differentBody) {\n        // Otherwise, calculate the ratio s / r,  where s is the width of the region\n        // represented by the internal node, and r is the distance between the body\n        // and the node's center-of-mass\n        ").concat(e("d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};",{indent:8}),"\n        r = Math.sqrt(").concat(e("d{var} * d{var}",{join:" + "}),");\n\n        if (r === 0) {\n          // Sorry about code duplication. I don't want to create many functions\n          // right away. Just want to see performance first.\n          ").concat(e("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10}),"\n          r = Math.sqrt(").concat(e("d{var} * d{var}",{join:" + "}),");\n        }\n        // If s / r < θ, treat this internal node as a single body, and calculate the\n        // force it exerts on sourceBody, and add this amount to sourceBody's net force.\n        if ((node.max_").concat(i(0)," - node.min_").concat(i(0),") / r < theta) {\n          // in the if statement above we consider node's width only\n          // because the region was made into square during tree creation.\n          // Thus there is no difference between using width or height.\n          v = gravity * node.mass * sourceBody.mass / (r * r * r);\n          ").concat(e("f{var} += v * d{var};",{indent:10}),"\n        } else {\n          // Otherwise, run the procedure recursively on each of the current node's children.\n\n          // I intentionally unfolded this loop, to save several CPU cycles.\n").concat(p(),"\n        }\n      }\n    }\n\n    ").concat(e("sourceBody.force.{var} += f{var};",{indent:4}),"\n  }\n\n  function insertBodies(bodies) {\n    ").concat(e("var {var}min = Number.MAX_VALUE;",{indent:4}),"\n    ").concat(e("var {var}max = Number.MIN_VALUE;",{indent:4}),"\n    var i = bodies.length;\n\n    // To reduce quad tree depth we are looking for exact bounding box of all particles.\n    while (i--) {\n      var pos = bodies[i].pos;\n      ").concat(e("if (pos.{var} < {var}min) {var}min = pos.{var};",{indent:6}),"\n      ").concat(e("if (pos.{var} > {var}max) {var}max = pos.{var};",{indent:6}),"\n    }\n\n    // Makes the bounds square.\n    var maxSideLength = -Infinity;\n    ").concat(e("if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;",{indent:4}),"\n\n    currentInCache = 0;\n    root = newNode();\n    ").concat(e("root.min_{var} = {var}min;",{indent:4}),"\n    ").concat(e("root.max_{var} = {var}min + maxSideLength;",{indent:4}),"\n\n    i = bodies.length - 1;\n    if (i >= 0) {\n      root.body = bodies[i];\n    }\n    while (i--) {\n      insert(bodies[i], root);\n    }\n  }\n\n  function insert(newBody) {\n    insertStack.reset();\n    insertStack.push(root, newBody);\n\n    while (!insertStack.isEmpty()) {\n      var stackItem = insertStack.pop();\n      var node = stackItem.node;\n      var body = stackItem.body;\n\n      if (!node.body) {\n        // This is internal node. Update the total mass of the node and center-of-mass.\n        ").concat(e("var {var} = body.pos.{var};",{indent:8}),"\n        node.mass += body.mass;\n        ").concat(e("node.mass_{var} += body.mass * {var};",{indent:8}),"\n\n        // Recursively insert the body in the appropriate quadrant.\n        // But first find the appropriate quadrant.\n        var quadIdx = 0; // Assume we are in the 0's quad.\n        ").concat(e("var min_{var} = node.min_{var};",{indent:8}),"\n        ").concat(e("var max_{var} = (min_{var} + node.max_{var}) / 2;",{indent:8}),"\n\n").concat(r(8),"\n\n        var child = getChild(node, quadIdx);\n\n        if (!child) {\n          // The node is internal but this quadrant is not taken. Add\n          // subnode to it.\n          child = newNode();\n          ").concat(e("child.min_{var} = min_{var};",{indent:10}),"\n          ").concat(e("child.max_{var} = max_{var};",{indent:10}),"\n          child.body = body;\n\n          setChild(node, quadIdx, child);\n        } else {\n          // continue searching in this quadrant.\n          insertStack.push(child, body);\n        }\n      } else {\n        // We are trying to add to the leaf node.\n        // We have to convert current leaf into internal node\n        // and continue adding two nodes.\n        var oldBody = node.body;\n        node.body = null; // internal nodes do not cary bodies\n\n        if (isSamePosition(oldBody.pos, body.pos)) {\n          // Prevent infinite subdivision by bumping one node\n          // anywhere in this quadrant\n          var retriesCount = 3;\n          do {\n            var offset = random.nextDouble();\n            ").concat(e("var d{var} = (node.max_{var} - node.min_{var}) * offset;",{indent:12}),"\n\n            ").concat(e("oldBody.pos.{var} = node.min_{var} + d{var};",{indent:12}),"\n            retriesCount -= 1;\n            // Make sure we don't bump it out of the box. If we do, next iteration should fix it\n          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));\n\n          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {\n            // This is very bad, we ran out of precision.\n            // if we do not return from the method we'll get into\n            // infinite loop here. So we sacrifice correctness of layout, and keep the app running\n            // Next layout iteration should get larger bounding box in the first step and fix this\n            return;\n          }\n        }\n        // Next iteration should subdivide node further.\n        insertStack.push(node, oldBody);\n        insertStack.push(node, body);\n      }\n    }\n  }\n}\nreturn createQuadTree;\n\n");return a;function r(e){for(var t=[],o=Array(e+1).join(" "),a=0;a<n;++a)t.push(o+"if (".concat(i(a)," > max_").concat(i(a),") {")),t.push(o+"  quadIdx = quadIdx + ".concat(Math.pow(2,a),";")),t.push(o+"  min_".concat(i(a)," = max_").concat(i(a),";")),t.push(o+"  max_".concat(i(a)," = node.max_").concat(i(a),";")),t.push(o+"}");return t.join("\n")}function p(){for(var n=Array(11).join(" "),e=[],o=0;o<t;++o)e.push(n+"if (node.quad".concat(o,") {")),e.push(n+"  queue[pushIdx] = node.quad".concat(o,";")),e.push(n+"  queueLength += 1;"),e.push(n+"  pushIdx += 1;"),e.push(n+"}");return e.join("\n")}function f(n){for(var e=[],o=0;o<t;++o)e.push("".concat(n,"quad").concat(o," = null;"));return e.join("\n")}}function s(n){var e=o(n);return"\n  function isSamePosition(point1, point2) {\n    ".concat(e("var d{var} = Math.abs(point1.{var} - point2.{var});",{indent:2}),"\n  \n    return ").concat(e("d{var} < 1e-8",{join:" && "}),";\n  }  \n")}function c(n){var e=Math.pow(2,n);return"\nfunction setChild(node, idx, child) {\n  ".concat(t(),"\n}");function t(){for(var n=[],t=0;t<e;++t){var o=0===t?"  ":"  else ";n.push("".concat(o,"if (idx === ").concat(t,") node.quad").concat(t," = child;"))}return n.join("\n")}}function d(n){return"function getChild(node, idx) {\n".concat(e(),"\n  return null;\n}");function e(){for(var e=[],t=Math.pow(2,n),o=0;o<t;++o)e.push("  if (idx === ".concat(o,") return node.quad").concat(o,";"));return e.join("\n")}}function l(n){var e=o(n),t=Math.pow(2,n),i="\nfunction QuadNode() {\n  // body stored inside this node. In quad tree only leaf nodes (by construction)\n  // contain bodies:\n  this.body = null;\n\n  // Child nodes are stored in quads. Each quad is presented by number:\n  // 0 | 1\n  // -----\n  // 2 | 3\n".concat(a("  this."),"\n\n  // Total mass of current node\n  this.mass = 0;\n\n  // Center of mass coordinates\n  ").concat(e("this.mass_{var} = 0;",{indent:2}),"\n\n  // bounding box coordinates\n  ").concat(e("this.min_{var} = 0;",{indent:2}),"\n  ").concat(e("this.max_{var} = 0;",{indent:2}),"\n}\n");return i;function a(n){for(var e=[],o=0;o<t;++o)e.push("".concat(n,"quad").concat(o," = null;"));return e.join("\n")}}function u(){return"\n/**\n * Our implementation of QuadTree is non-recursive to avoid GC hit\n * This data structure represent stack of elements\n * which we are trying to insert into quad tree.\n */\nfunction InsertStack () {\n    this.stack = [];\n    this.popIdx = 0;\n}\n\nInsertStack.prototype = {\n    isEmpty: function() {\n        return this.popIdx === 0;\n    },\n    push: function (node, body) {\n        var item = this.stack[this.popIdx];\n        if (!item) {\n            // we are trying to avoid memory pressure: create new element\n            // only when absolutely necessary\n            this.stack[this.popIdx] = new InsertStackElement(node, body);\n        } else {\n            item.node = node;\n            item.body = body;\n        }\n        ++this.popIdx;\n    },\n    pop: function () {\n        if (this.popIdx > 0) {\n            return this.stack[--this.popIdx];\n        }\n    },\n    reset: function () {\n        this.popIdx = 0;\n    }\n};\n\nfunction InsertStackElement(node, body) {\n    this.node = node; // QuadTree node\n    this.body = body; // physical body which needs to be inserted to node\n}\n"}n.exports=a,n.exports.generateQuadTreeFunctionBody=r,n.exports.getInsertStackCode=u,n.exports.getQuadNodeCode=l,n.exports.isSamePosition=s,n.exports.getChildBodyCode=d,n.exports.setChildBodyCode=c},eb57:function(n,e,t){t("99af");var o=t("c910");function i(n,e){var t=a(n,e),o=new Function(t)(),i=o.Body;return i}function a(n,e){var t="\n".concat(s(n,e),"\n").concat(r(n,e),"\nreturn {Body: Body, Vector: Vector};\n");return t}function r(n){var e=o(n),t=e("{var}",{join:", "});return"\nfunction Body(".concat(t,") {\n  this.isPinned = false;\n  this.pos = new Vector(").concat(t,");\n  this.force = new Vector();\n  this.velocity = new Vector();\n  this.mass = 1;\n\n  this.springCount = 0;\n  this.springLength = 0;\n}\n\nBody.prototype.reset = function() {\n  this.force.reset();\n  this.springCount = 0;\n  this.springLength = 0;\n}\n\nBody.prototype.setPosition = function (").concat(t,") {\n  ").concat(e("this.pos.{var} = {var} || 0;",{indent:2}),"\n};")}function s(n,e){var t=o(n),i="";e&&(i="".concat(t("\n   var v{var};\nObject.defineProperty(this, '{var}', {\n  set: function(v) { \n    if (!Number.isFinite(v)) throw new Error('Cannot set non-numbers to {var}');\n    v{var} = v; \n  },\n  get: function() { return v{var}; }\n});")));var a=t("{var}",{join:", "});return"function Vector(".concat(a,") {\n  ").concat(i,"\n    if (typeof arguments[0] === 'object') {\n      // could be another vector\n      let v = arguments[0];\n      ").concat(t('if (!Number.isFinite(v.{var})) throw new Error("Expected value is not a finite number at Vector constructor ({var})");',{indent:4}),"\n      ").concat(t("this.{var} = v.{var};",{indent:4}),"\n    } else {\n      ").concat(t('this.{var} = typeof {var} === "number" ? {var} : 0;',{indent:4}),"\n    }\n  }\n  \n  Vector.prototype.reset = function () {\n    ").concat(t("this.{var} = ",{join:""}),"0;\n  };")}n.exports=i,n.exports.generateCreateBodyFunctionBody=a,n.exports.getVectorCode=s,n.exports.getBodyCode=r},ed63:function(n,e,t){t("99af");var o=t("c910");function i(n){var e=a(n);return new Function("bodies","timeStep","adaptiveTimeStepWeight",e)}function a(n){var e=o(n),t="\n  var length = bodies.length;\n  if (length === 0) return 0;\n\n  ".concat(e("var d{var} = 0, t{var} = 0;",{indent:2}),"\n\n  for (var i = 0; i < length; ++i) {\n    var body = bodies[i];\n    if (body.isPinned) continue;\n\n    if (adaptiveTimeStepWeight && body.springCount) {\n      timeStep = (adaptiveTimeStepWeight * body.springLength/body.springCount);\n    }\n\n    var coeff = timeStep / body.mass;\n\n    ").concat(e("body.velocity.{var} += coeff * body.force.{var};",{indent:4}),"\n    ").concat(e("var v{var} = body.velocity.{var};",{indent:4}),"\n    var v = Math.sqrt(").concat(e("v{var} * v{var}",{join:" + "}),");\n\n    if (v > 1) {\n      // We normalize it so that we move within timeStep range. \n      // for the case when v <= 1 - we let velocity to fade out.\n      ").concat(e("body.velocity.{var} = v{var} / v;",{indent:6}),"\n    }\n\n    ").concat(e("d{var} = timeStep * body.velocity.{var};",{indent:4}),"\n\n    ").concat(e("body.pos.{var} += d{var};",{indent:4}),"\n\n    ").concat(e("t{var} += Math.abs(d{var});",{indent:4}),"\n  }\n\n  return (").concat(e("t{var} * t{var}",{join:" + "}),")/length;\n");return t}n.exports=i,n.exports.generateIntegratorFunctionBody=a}});
//# sourceMappingURL=app.ea1439a4.js.map